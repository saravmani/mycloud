Creational patterns  are deal with creation of objects.


The C# language uses the
new keyword to instantiate an object of a class. Typically, you use the new keyword wherever that object
is being utilized. However, this means you must specify a concrete type name at that location. In certain
real-world scenarios, as you will learn in this and the next chapter, it becomes necessary to isolate the object
instantiation logic and code from the class that utilizes the object. Thatâ€™s where creational patterns come
into the picture.


five creational patterns outlined in the GoF catalog.

Creational patterns isolate the logic of object instantiation from the main class.
# here main class means core business logic class for the application



 Singleton : Ensures that only one instance of a class is created
 Factory Method : Creates instance of one of the several classes
 Prototype : Creates an instance of a class that is a copy or clone of an existing instance
 Abstract Factory : Creates instances of families of related classes
 Builder : Separates object construction from its representation