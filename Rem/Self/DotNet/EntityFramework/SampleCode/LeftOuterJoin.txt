inc = db.TaskTypes.Include("TaskLists").ToList();//Used for eagr loading
or
var inc = db.TaskTypes.Include((eachCol)=> eachCol.TaskLists).ToList();
//both are same

SELECT     [Project1].[TaskTypeId] AS [TaskTypeId],     [Project1].[TaskTypeName] AS [TaskTypeName],     [Project1].[IsRepetedTask] AS [IsRepetedTask],     [Project1].[C1] AS [C1],     [Project1].[Id] AS [Id],     [Project1].[TaskName] AS [TaskName],     [Project1].[TaskDescription] AS [TaskDescription],     [Project1].[TaskTypeId1] AS [TaskTypeId1],     [Project1].[UserId] AS [UserId]    FROM ( SELECT         [Extent1].[TaskTypeId] AS [TaskTypeId],         [Extent1].[TaskTypeName] AS [TaskTypeName],         [Extent1].[IsRepetedTask] AS [IsRepetedTask],         [Extent2].[Id] AS [Id],         [Extent2].[TaskName] AS [TaskName],         [Extent2].[TaskDescription] AS [TaskDescription],         [Extent2].[TaskTypeId] AS [TaskTypeId1],         [Extent2].[UserId] AS [UserId],         CASE WHEN ([Extent2].[UserId] IS NULL) THEN CAST(NULL AS int) ELSE 1 END AS [C1]
FROM  [dbo].[TaskType] AS [Extent1]
LEFT OUTER JOIN [d
bo].[TaskList] AS [Extent2] ON [Extent1].[TaskTypeId] = [Extent2].[TaskTypeId]    )  AS [Project1]    ORDER BY [Project1].[TaskTypeId] ASC, [Project1].[C1] ASC"
