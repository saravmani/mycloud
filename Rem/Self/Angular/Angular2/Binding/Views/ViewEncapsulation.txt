View Encapsulation - ViewEncapsulation
-----------------------------------------------
#Refs - https://blog.thoughtram.io/angular/2015/06/29/shadow-dom-strategies-in-angular2.html
ViewEncapsulation.None
ViewEncapsulation.Native -- shadow dom
ViewEncapsulation.Emulate - default one. which emulates shadow dome behaviour
//this will be useful in the browsers which are not support shadow dom

ViewEncapsulation.Emulated
-------------------------------------------
This view encapsulation is used by default. ViewEncapsulation.Emulated emulates style encapsulation,
even if no Shadow DOM is available. This is a very powerful feature in case you want to
use a third-party component that comes with styles that might affect your application.
What happens to our components, and especially to the styles, when this view encapsulation is used?
Well, let’s first check if the styles are still written to the document head. Here’s what the head
looks like with the exact same component but different strategy:

import {ViewEncapsulation} from '@angular/core';

@Component({
  moduleId: module.id,
  selector: 'my-zippy',
  templateUrl: 'my-zippy.component.html',
  styles: [`
    .zippy {
      background: green;
    }
  `],
  encapsulation: ViewEncapsulation.None
})
class ZippyComponent {
  @Input() title: string;
}

.html

<div class="zippy">
  <div (click)="toggle()" class="zippy__title">

  </div>
  <div [hidden]="!visible" class="zippy__content">
    <ng-content></ng-content>
  </div>
</div>


//style output

<head>
  <style>.zippy[_ngcontent-1] {
  background: green;
  }</style>
</head>


Looks like styles are still written to the document head.
But  Instead of the simple .zippy selector that we used,
Angular creates a .zippy[_ngcontent-1] selector. So it seems like Angular rewrote our component’s styles.
 
<my-zippy title="Details" _ngcontent-0 _nghost-1>
  <div class="zippy" _ngcontent-1>
    <div (click)="toggle()" class="zippy__title" _ngcontent-1>
      ▾ Details
    </div>
    <div [hidden]="!visible" class="zippy__content" _ngcontent-1>
      <script type="ng/contentStart" class="ng-binding"></script>
        ...
      <script type="ng/contentEnd"></script>
    </div>
  </div>
</my-zippy>
