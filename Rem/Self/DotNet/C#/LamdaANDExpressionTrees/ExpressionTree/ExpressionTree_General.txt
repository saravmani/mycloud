Created:17-Jun-2018;Sunday;From home-Chennai-Keelkattalai
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *

Expression is an abstract class which contains static methods and inherited by various
types (like ParameterExpression, MethodCallExpression, BinaryExpression etc.) to create expression tree nodes of specific types.
Also all these expression-specific expression tree types are defined in System.Linq.Expressions namespace.

Expression trees represent code in a tree-like format, where each node is an expression
(for example, a method call or a binary operation such as x < y). You can also convert expression trees
into compiled code and run it. This transformation enables dynamic modification of
executable code as well as the execution of LINQ queries in various databases and the creation of dynamic queries.

Ex:
// Create an expression using expression lambda
Expression<Func<int, int, int>> expression = (num1, num2) => num1 + num2;

// Compile the expression
Func<int, int, int> compiledExpression = expression.Compile();

// Execute the expression.
int result = compiledExpression(3, 4); //return 7


Above code will be compiled into below code

 C# compiler generates the expression tree from the provided lambda expression as shown below:
 //Create the expression parameters
 ParameterExpression num1 = Expression.Parameter(typeof(int), "num1");
 ParameterExpression num2 = Expression.Parameter(typeof(int), "num2");

 //Create the expression parameters
 ParameterExpression[] parameters = new ParameterExpression[] { num1, num2 };

 //Create the expression body
 BinaryExpression body = Expression.Add(num1, num2);

 //Create the expression
 Expression<Func<int, int, int>> expression = Expression.Lambda<Func<int, int, int>>(body, parameters);

 This looks much more complicated, but this is what actually happens when you supply a lambda expression to an expression tree.


 In LINQ, domain-specific queries (like LINQ to SQL, LINQ to Entity) are result into IQueryable<T> type.
 The C# and Visual Basic compilers compile these queries into code that builds an expression trees at runtime.
 Then query provider traverse the expression tree and translate it
 into a query language (like T-SQL) which is appropriate for that data source.
