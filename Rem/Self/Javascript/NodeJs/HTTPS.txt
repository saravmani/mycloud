To generate a private key, you’ll need OpenSSL, which will already be installed on
your system if you installed Node. To generate a private key, which we’ll call key.pem,
open up a command-line prompt and enter the following:
openssl genrsa 1024 > key.pem
In addition to a private key, you’ll need a certificate. Unlike a private key, a certificate
can be shared with the world; it contains a public key and information about the certificate
holder. The public key is used to encrypt traffic sent from the client to the
server.
The private key is used to create the certificate. Enter the following to generate a
certificate called key-cert.pem:
openssl req -x509 -new -key key.pem > key-cert.pem

Now that you’ve generated your keys, put them in a safe place. In the HTTPS server in
the following listing we reference keys stored in the same directory as our server
script, but keys are more often kept elsewhere, typically ~/.ssh. The following code
will create a simple HTTPS server using your keys.

var https = require('https');
var fs = require('fs');
var options = {
key: fs.readFileSync('./key.pem'),
cert: fs.readFileSync('./key-cert.pem')
};
https.createServer(options, function (req, res) {
res.writeHead(200);
res.end("hello world\n");
}).listen(3000);