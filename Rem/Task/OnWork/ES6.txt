destructing
--------------------


Destructing
---------------------

let foo = ['one', 'two', 'three'];
let [one, two, three] = foo;
console.log(one); // 'one'

below example for objecct level destructing

let myModule = {
drawSquare: function drawSquare(length) { /* implementation */ },
drawCircle: function drawCircle(radius) { /* implementation */ },
drawText: function drawText(text) { /* implementation */ },
};
let {drawSquare, drawText} = myModule;
drawSquare(5);
drawText('hello');

Destructuring can also be used for passing objects into a function
It is also possible to assign default
values to destructured arguments, which can be a useful pattern if passing in a configuration
object.



below is not es6... but try
-----------------------------------
// pass the parameter
setTimeout(function(name) {
console.log('Hello ' + name);
}, 30000, 'Shelley');/// note here we are passing the parameter



setImmediate()and clearImmediate()
----------------------------------------
 The setImmediate() creates an event, but
the event has precedence over those created by setTimeout() and setInterval().



