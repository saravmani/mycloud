Volatile
---------------

 "volatile" tells the compiler that the value of a variable must never be cached as 
 its value may change outside of the scope 

int i = 5;
System.out.println(i);
The compiler may optimize this to just print 5, like this:

System.out.println(5);
However, if there is another thread which can change i, this is the wrong behaviour. 
If another thread changes i to be 6, the optimized version will still print 5.

The volatile keyword prevents such optimization and caching, and thus is 
useful when a variable can be changed by another thread.