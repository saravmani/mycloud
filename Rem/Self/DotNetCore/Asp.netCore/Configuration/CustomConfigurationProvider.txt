Created:24-Dec-2018;Monday;From Home-Bangalore
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *

public class AwesomeConfigurationProvider : ConfigurationProvider, IConfigurationSource
{
    private readonly string fileName;
    public AwesomeConfigurationProvider(string fileName)
    {
        this.fileName = fileName;
    }
    public override void Load()
    {
        using (var fs = new FileStream(fileName, FileMode.Open))
        {
            var doc = XDocument.Load(fs);
            var connectionStrings = doc.Root.Descendants()
            .Where(e => e.Name.Equals(XName.Get("connectionStrings")))
            .Descendants(XName.Get("add")).Select(e =>
            new KeyValuePair<string,
            string>($"connectionStrings:{e.Attribute(XName.Get("name")).Value}", e.Attribute(XName.Get("connectionString")).Value));
            var appSettings = doc.Root.Descendants()
            .Where(e => e.Name.Equals(XName.Get("appSettings")))
            .Descendants(XName.Get("add")).Select(e =>
            new KeyValuePair<string, string>($"appSettings:{e.Attribute(XName.Get("key")).Value}", e.Attribute(XName.Get("value")).Value));

            Data = connectionStrings.Union(appSettings).ToDictionary(e => e.Key, e => e.Value);
        }
    }
}



public static class AwesomeConfigurationExtensions
{
    public static IConfigurationBuilder AddLegacyXmlConfiguration(this
    IConfigurationBuilder configurationBuilder, string path)
    {
        return configurationBuilder.Add(new AwesomeConfigurationProvider(path));
    }
}

var builder = new ConfigurationBuilder()
.SetBasePath(Directory.GetCurrentDirectory())
.AddLegacyXmlConfiguration("web.config");
