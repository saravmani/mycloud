# we can group two are more properties together and create complex type.
# just select two properties right click on entity model, create complex type


When we refactor two or more entity properties to a new complex type,
a new class is generated by default for that complex type. 
A property of the complex type class is also added into the
main entity POCO class.


#POC
I just created one complex type by grouping two properties. 
then new class (TaskInfo) is got generated.
# there is no functional difference i found

objTaskList.TaskLists.Add(new TaskList
                {
                    objTaskInfo = new TaskInfo {
                        TaskDescription = objReqObject.TaskDescription,
                        TaskName = objReqObject.TaskName,
                    },
                    UserId = 1,
                    TaskTypeId = objReqObject.TaskTypeId
                });
                objTaskList.SaveChanges();

The complex type must be a class.
Inheritance cannot be used with complex type classes

In Entity Framework, complex types do not leverage change tracking. 
Changes to complex types will not be
reflected in change tracking. This means that if you mark the properties on a complex type as virtual,
there is no change-tracking proxy support. 
All change tracking is snapshot-based.
            