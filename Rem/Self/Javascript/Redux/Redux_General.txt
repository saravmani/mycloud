It is a STATE CONTAINER for JavaScript apps
It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test.


Undo and Redo with not much work.
Ex: Code for state check
if ($('.foobar').hasClass('active')) {
  doSomething();
}//Here we are checking active state of the controll in view



Redux is like “a backend’s database on the client-side where you store all the required information that are required in order to generate the view”. 


The basic idea is that the entire application state is kept in a single store. The way this state changes is by firing actions from your application and then writing reducers for these actions that modify the state. The entire state transition is kept inside reducers and should not have any side-effects.