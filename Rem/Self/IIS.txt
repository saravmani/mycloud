thread starvation
------------------------
In most scenarios, the process being executed is short-lived enough that ASP.NET can
handle a few blocked threads. However, if the application needs to handle a large
number of incoming requests or there are too many long-running requests, the thread
pool might become depleted, and a condition known as thread starvation will occur.
When this happens, the web server will start queuing new incoming requests. At some
point, the queue will fill up and any new requests will be rejected, returning an HTTP
503 (server too busy) status code.



IIS 8.5 Features
-----------------

1. Idle worker process Page-Out in IIS 8.5. In 8.5 we can set the ideal time out action for 
application pool - Suspend or ternminate


URLScan utility
------------------
UrlScan 3.1 is a security tool that restricts the types of HTTP requests that IIS will process. By blocking specific HTTP requests, the UrlScan 3.1 security tool helps to prevent potentially harmful requests from reaching applications on the server. UrlScan 3.1 is an update to UrlScan 2.5 supports IIS 5.1, IIS 6.0 and IIS 7.0 on Windows Vista and Windows Server 2008.
for more check this
	http://www.iis.net/downloads/microsoft/urlscan



IIS Architecture
Windows ships with a kernel-mode device driver called HTTP.sys, which listens for HTTP connections and hands them over to an appropriate application. It allows multiple applications to effectively share the same IP/port combinations by performing some HTTP parsing in the kernel before dispatching to the application. For example:

1 http://server:80/app1   # hosted by IIS
2 http://server:80/app2   # hosted by a different process
IIS builds on top of HTTP.sys - the request is initially received by HTTP.sys (which also performs some security filtering, like Windows Authentication or client certificates), which in turn hands it to IIS. It then sends the response from IIS back to the client.

Each application running on IIS belongs to an application pool, and a worker process is created to serve requests to that application pool. This is the W3WP process you’ll sometimes see in task manager. If the process runs for significant time, or experiences severe memory leaks and runs out of memory, or hangs, IIS can terminate it and create a new worker process.

The CLR was loaded into the worker process1


Machine key setup.
-------------------------
we can set machine key directly in web.config file or through iis management console. 
in web.config file we can set like below
<system.web>
	<machineKey decryptionKey="136F774C06F792F4E0620EA0B015947F9CDA33CD5C331828,IsolateApps" validationKey="47E07354B7E3A1233E9B2C0311F194B252FF553A9EB234D5A4BE492376046F548D07FE23B6C3F54FD5176335117364107DC9418BEBD3FE32BCDEAA528FF110BE,IsolateApps" />
</system.web>

in iis console
Start the management console and then select the web site. Open the machine key configuration:
Uncheck "Automatically generate at runtime" for both the validation key and the decryption key.

Click "Generate Keys" under "Actions" on the right side of the panel.

Click "Apply".


