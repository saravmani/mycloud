Created:17-Jun-2018;Sunday;From home-Chennai-Keelkattalai
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *
You'll have to use a third party container with property injection support.

Please note that property injection is considered bad in 98% of all scenarios,
because it hides dependencies and there is no guarantee that the object will be injected when the class is created.

With constructor injection you can enforce this via constructor and check for null and
the not create the instance of the class. With property injection this is impossible and during unit tests its not
obvious which services/dependencies the class requires when they are not defined in the constructor,
so easy to miss and get NullReferenceExceptions.

The only valid reason for Property Injection I ever found was to inject services into
proxy classes generated by a third party library, i.e. WCF proxies created from an
interface where you have no control about the object creation.

Avoid it everywhere else.
