Test.spec.Test
---------------------
import { TestBed, ComponentFixture } from "@angular/core/testing";
import { FirstComponent } from "../app/ondemand/first.component";
import { Product } from "../app/model/product.model";
import { Model } from "../app/model/repository.model";

describe("FirstComponent", () => {

    let fixture: ComponentFixture<FirstComponent>;
    let component: FirstComponent;
    let mockRepository = {
      getProducts: function () {
        return [
          new Product(1, "test1", "Soccer", 100),
          new Product(2, "test2", "Chess", 100),
          new Product(3, "test3", "Soccer", 100),
        ]
      }
    }
    beforeEach(() => {
      TestBed.configureTestingModule({
        declarations: [FirstComponent],
        providers: [
          { provide: Model, useValue: mockRepository }
        ]
      });
      fixture = TestBed.createComponent(FirstComponent);
      component = fixture.componentInstance;
    });
    it("filters categories", () => {
      component.category = "Chess"
      expect(component.getProducts().length).toBe(1);
      component.category = "Soccer";
      expect(component.getProducts().length).toBe(2);
      component.category = "Running";
      expect(component.getProducts().length).toBe(0);
    });
});


// In above example we are testing the filter

component.ts
-----------------
import { Component } from "@angular/core";
import { Product } from "../model/product.model";
import { Model } from "../model/repository.model";
@Component({
  selector: "first",
  template: `<div class="bg-primary p-a-1">
There are
<span class="strong"> {{getProducts().length}} </span>
products
</div>`
})
export class FirstComponent {
  constructor(private repository: Model) { }
  category: string = "Soccer";
  getProducts(): Product[] {
    return this.repository.getProducts()
      .filter(p => p.category == this.category);
  }
}
