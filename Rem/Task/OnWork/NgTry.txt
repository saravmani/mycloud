
///check is it showing all the properties or the one which is got changed
ngOnChanges(changes: {[property: string]: SimpleChange }) {
let change = changes["bgClass"];`//SimpleChanges will have dictionary of all the properties
let classList = this.element.nativeElement.classList;
  if (!change.isFirstChange() && classList.contains(change.previousValue)) {
classList.remove(change.previousValue);
}
if (!classList.contains(change.currentValue)) {
classList.add(change.currentValue);
}
}


Read Bout Tree shaking
Try AOT and check how External template is changed to inline template

Tuples
------------
Tuples are fixed length arrays. each item in array is specific data type
let someVariableName:[string,string,string];

try with different data types in tuple



Try viewencapsualisation . how selector is getting applied for .emit option. also check if view's css is external link then how this converted ?

The first way is to provide a package.json file with information about the
directory. The structure contains other information, but the two entries relevant
to packaging the module are name and main:
{ "name" : "mylibrary",
"main" : "./mymodule/mylibrary.js"
}
The first property, name, is the name of the module. The second, main, indicates
the entry point for the module.



2. Using inputs array
ex:
@Component({
  selector: 'user',
  inputs: ['value']
})
@View({
  template: '{{value.name}}'
})
export class UserComponent {
  value: User;
}


try hostbinding in directive

@Directive({
selector: "[paDisplayValue]"
})
export class PaDisplayValueDirective {
constructor( @Inject(VALUE_SERVICE) serviceValue: string) {
    this.elementContent = serviceValue;
}
    @HostBinding("textContent") elementContent: string;
}
